<resources>
    <string name="app_name">LifeUp Cloud</string>
    <string name="server_status">Service is not running...</string>
    <string name="serverStartedMessage">Server started</string>
    <string name="ipAddressUnknown">No IP address (connected to WiFi?)</string>
    <string name="app_introduction"><![CDATA[This is an extension tool for <a href="https://play.google.com/store/apps/details?id=net.sarasarasa.lifeup">LifeUp</a> app, which allows you to control LifeUp from your computer or other devices. Please make sure you have installed LifeUp first.]]></string>
    <string name="localIpAddressMessage">Connected to the following IP(s):\n%1$s\n\nAccording to your networking situation, there may be multiple IP addresses which may belong to different network segments here, and you should choose the address in the form of 192.168.x.x for general LAN.\nWhen service started, you can open it on your computer which connected to the same WIFI.\n\nIf the IP address displayed here is not accurate, you can also go to the WIFI settings to confirm your local IP and the server port is 13276.</string>
    <string name="overlay_permission">Overlay Permission</string>
    <string name="overlay_permission_desc">Grant permission to execute API in background (Android 10+)</string>
    <string name="title_introduction">Introduction</string>
    <string name="title_config">Config</string>
    <string name="btn_config">CONFIG</string>
    <string name="ignore_battery_optimizations">Ignore battery optimizations</string>
    <string name="ignore_battery_optimizations_desc">In order for the service to keep running in the background stably, you need to turn off battery optimization.
        \n\nAnd in addition to this setting, you also need to check the additional battery optimization methods of various manufacturers（like allowing “auto-start”, and locking app in multi-tasking）.</string>
    <string name="notification_channel_server">Server Running</string>
    <string name="title_server">Server</string>
    <string name="title_status">Status</string>
    <string name="status_permission">Required Permissions</string>
    <string name="status_permission_overlay">Overlay Permission</string>
    <string name="status_permission_overlay_granted">Overlay permission granted</string>
    <string name="status_permission_overlay_missing">Overlay permission missing</string>
    <string name="status_permission_battery">Battery Optimization</string>
    <string name="status_permission_battery_ignored">Battery optimization ignored</string>
    <string name="status_permission_battery_unknown">Battery optimization status unknown (varies by manufacturer)</string>
    <string name="status_permission_content_provider">LifeUp Data Access</string>
    <string name="status_lifeup">LifeUp Status</string>
    <string name="status_server">Server Status</string>
    <string name="switch_start_service">Start Service</string>
    <string name="title_about">About</string>
    <string name="about_text"><![CDATA[This is a small tool that can turn your mobile phone into an HTTP server, so that you can send API commands (URL Scheme) from the LAN computer to trigger various actions of the <a href="https://play.google.com/store/apps/details?id=net.sarasarasa.lifeup">LifeUp application</a>.
<br/><br/><b># It can be used in the following scenarios (requires additional development of Web, Python, etc.):</b>
<br/>1. Judging the usage time on the computer, the amount of text input, and the drawing time to trigger the completion of tasks, rewards or punishments of the LifeUp application.<br/>And everything you can do with computer programming!
<br/>
<br/>2. Implement a simple web page version to create tasks from the computer web page.
<br/>
<br/>3. Infinite other possibilities…
<br/>
<br/><b># To-do:</b>
<br/>At present, it still lacks a query interface, so it can only focus on triggering actions, and cannot query the task list and attribute experience value on the mobile phone.
<br/>
<br/><b># Open Source:</b>
<br/>This is an open source project <a href="https://github.com/Ayagikei/LifeUp">https://github.com/Ayagikei/LifeUp</a>, welcome to contribute code to us.]]></string>
    <string name="port_config">Service port: %1$s</string>
    <string name="content_provider_permission">Content provider permission</string>
    <string name="content_provider_permission_desc">Grant permission to read the data of LifeUp</string>
    <string name="qrcode_scanning">Scanning...</string>
    <string name="lifeup_status_unknown">The status of LifeUp is unknown, please make sure you have authorized the permission to read LifeUp data, and LifeUp is running</string>
    <string name="lifeup_status_normal">LifeUp is running, data permission granted...</string>
    <string name="lifeup_permission_granted">You have successfully obtained permission.</string>
    <string name="lifeup_status"><i>LifeUp</i> Status</string>
    <string name="cloud_version">Version: %1$s</string>
    <string name="switch_cors">Allow Cross-Origin Access (CORS)</string>
    <string name="title_advanced">Advanced Settings</string>
    <string name="title_document">Documentation</string>
    <string name="wake_lock_duration">Wake Lock Duration</string>
    <string name="wake_lock_duration_desc">Set how long the service keeps awake (in minutes).\n\nIt will be automatically renewed each time a request is received, so you usually don\'t need to set it too long.\n\nRange: 1-60 minutes</string>
    <string name="wake_lock_duration_error">Please enter a number between 1-60</string>
    <string name="port_setting">Server Port</string>
    <string name="port_setting_desc">Set custom server port.\n\nLeave empty to use default port (13276) with auto-retry on port conflict.\n\nRange: 1024-65535</string>
    <string name="port_setting_error">Please enter a number between 1024-65535</string>
    <string name="port_setting_conflict">Port %1$d is already in use</string>
    <string name="btn_save">Save</string>
    <string name="api_token_setting">API Token</string>
    <string name="api_token_desc">Set an API token to secure your server. When set, all requests must include this token in the Authorization header.</string>

</resources>