plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def computeVersionCode(versionName) {
    def (major, minor, patch) = versionName.tokenize('.')

    // 验证每部分都不超过99
    assert major.toInteger() <= 99: "Major version cannot exceed 99"
    assert minor.toInteger() <= 99: "Minor version cannot exceed 99"
    assert patch.toInteger() <= 99: "Patch version cannot exceed 99"

    return (major.toInteger() * 10000) + (minor.toInteger() * 100) + patch.toInteger().toString().padLeft(2, '0').toInteger()
}

android {
    namespace 'net.lifeupapp.lifeup.http'
    compileSdk 34

    defaultConfig {
        applicationId "net.lifeupapp.lifeup.http"
        minSdk 21
        targetSdk 34
        versionName "2.0.0"
        versionCode computeVersionCode(versionName)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*', 'META-INF/licenses/*']
        }
        resources {
            excludes += ['META-INF/*', 'META-INF/licenses/*', '**/attach_hotspot_windows.dll']
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':core')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.5'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.5'

    // Java 8
    // https://developer.android.com/studio/write/java8-support#library-desugaring-versions
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"

    def ktorVersion = '2.3.12'
    implementation "io.ktor:ktor-server-core:$ktorVersion"
    implementation "io.ktor:ktor-server-netty:$ktorVersion"
    implementation("io.ktor:ktor-server-websockets:$ktorVersion")
    implementation "io.ktor:ktor-server-content-negotiation:$ktorVersion"
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktorVersion")
    implementation("io.ktor:ktor-server-call-logging:$ktorVersion")
    implementation("io.ktor:ktor-server-status-pages:$ktorVersion")
    implementation("io.ktor:ktor-server-cors:$ktorVersion")
    testImplementation "io.ktor:ktor-websockets:$ktorVersion"
    testImplementation "io.ktor:ktor-client-websockets:$ktorVersion"
    testImplementation "io.ktor:ktor-client-cio:$ktorVersion"
    testImplementation "io.ktor:ktor-client-okhttp:$ktorVersion"
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    def kotlinxHtmlVersion = "0.8.0"
    // include for JVM target
    implementation("org.jetbrains.kotlinx:kotlinx-html-jvm:$kotlinxHtmlVersion")


    implementation 'com.google.mlkit:barcode-scanning:17.3.0'
    // CameraX core library using the camera2 implementation
    def camerax_version = "1.0.0-rc03"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.3.4"

    // implementation 'org.jmdns:jmdns:3.5.8'

}